<mxfile host="app.diagrams.net" modified="2020-07-04T15:02:43.619Z" agent="5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36" etag="4kBhlVOmn2yCtZQVa-qm" version="13.3.8" type="github">
  <diagram id="EnGBE1AvFFQfY2pASgys" name="第 1 页">
    <mxGraphModel dx="2245" dy="748" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="78IFhjk_3ZHjHySOzImb-25" value="" style="rounded=0;whiteSpace=wrap;html=1;shadow=0;fontSize=15;" parent="1" vertex="1">
          <mxGeometry x="-710" y="460" width="1030" height="590" as="geometry" />
        </mxCell>
        <mxCell id="78IFhjk_3ZHjHySOzImb-24" value="" style="rounded=0;whiteSpace=wrap;html=1;fontSize=15;shadow=0;" parent="1" vertex="1">
          <mxGeometry x="-710" y="20" width="1030" height="420" as="geometry" />
        </mxCell>
        <mxCell id="Itvi5Ar5wnEuiqMfkp8T-2" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="Itvi5Ar5wnEuiqMfkp8T-1" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="-480" y="250" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Itvi5Ar5wnEuiqMfkp8T-1" value="new Promise()" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#f8cecc;strokeColor=#b85450;" parent="1" vertex="1">
          <mxGeometry x="-660" y="225" width="110" height="50" as="geometry" />
        </mxCell>
        <mxCell id="Itvi5Ar5wnEuiqMfkp8T-4" value="在执行器函数中&lt;br&gt;执行异步操作" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="-480" y="222.5" width="120" height="55" as="geometry" />
        </mxCell>
        <mxCell id="Itvi5Ar5wnEuiqMfkp8T-7" value="&lt;font style=&quot;font-size: 14px&quot;&gt;如果执行成功resolve()&lt;/font&gt;" style="endArrow=classic;html=1;" parent="1" edge="1">
          <mxGeometry x="0.1667" y="-7" width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-360" y="245" as="sourcePoint" />
            <mxPoint x="-300" y="185" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Itvi5Ar5wnEuiqMfkp8T-8" value="promise状态变为&lt;br&gt;resolved" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-290" y="155" width="120" height="50" as="geometry" />
        </mxCell>
        <mxCell id="Itvi5Ar5wnEuiqMfkp8T-9" value="&lt;font style=&quot;font-size: 14px&quot;&gt;如果执行失败reject()&lt;/font&gt;" style="endArrow=classic;html=1;entryX=0;entryY=0.2;entryDx=0;entryDy=0;entryPerimeter=0;" parent="1" target="Itvi5Ar5wnEuiqMfkp8T-10" edge="1">
          <mxGeometry x="-0.0667" y="4" width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-360" y="265" as="sourcePoint" />
            <mxPoint x="-300" y="295" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Itvi5Ar5wnEuiqMfkp8T-10" value="promise状态变为&lt;br&gt;rejected" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-290" y="295" width="120" height="50" as="geometry" />
        </mxCell>
        <mxCell id="Itvi5Ar5wnEuiqMfkp8T-12" value="异步调用" style="endArrow=classic;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-170" y="195" as="sourcePoint" />
            <mxPoint x="-120" y="145" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Itvi5Ar5wnEuiqMfkp8T-14" value="oinResolved()" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="-110" y="125" width="110" height="50" as="geometry" />
        </mxCell>
        <mxCell id="Itvi5Ar5wnEuiqMfkp8T-15" value="异步调用" style="endArrow=classic;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="-170" y="327.5" as="sourcePoint" />
            <mxPoint x="-100" y="355" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Itvi5Ar5wnEuiqMfkp8T-16" value="onRejected()" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="-100" y="335" width="110" height="50" as="geometry" />
        </mxCell>
        <mxCell id="Itvi5Ar5wnEuiqMfkp8T-17" value="" style="endArrow=classic;html=1;" parent="1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="10" y="355" as="sourcePoint" />
            <mxPoint x="60" y="305" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Itvi5Ar5wnEuiqMfkp8T-18" value="" style="endArrow=classic;html=1;" parent="1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint y="165" as="sourcePoint" />
            <mxPoint x="60" y="195" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Itvi5Ar5wnEuiqMfkp8T-19" value="then() / catch()&lt;br&gt;返回新的promise" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#f8cecc;strokeColor=#b85450;" parent="1" vertex="1">
          <mxGeometry x="60" y="195" width="190" height="100" as="geometry" />
        </mxCell>
        <mxCell id="Itvi5Ar5wnEuiqMfkp8T-20" value="then()指定的" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;" parent="1" vertex="1">
          <mxGeometry x="-90" y="105" width="80" height="20" as="geometry" />
        </mxCell>
        <mxCell id="Itvi5Ar5wnEuiqMfkp8T-21" value="then()和catch()指定的" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;" parent="1" vertex="1">
          <mxGeometry x="-107" y="396" width="130" height="20" as="geometry" />
        </mxCell>
        <mxCell id="Itvi5Ar5wnEuiqMfkp8T-22" value="pending" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;" parent="1" vertex="1">
          <mxGeometry x="-635" y="195" width="60" height="20" as="geometry" />
        </mxCell>
        <mxCell id="78IFhjk_3ZHjHySOzImb-1" value="Promise流程" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#e1d5e7;strokeColor=#9673a6;fontStyle=1" parent="1" vertex="1">
          <mxGeometry x="-260" y="35" width="200" height="40" as="geometry" />
        </mxCell>
        <mxCell id="78IFhjk_3ZHjHySOzImb-2" value="自定义Promise" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#e1d5e7;strokeColor=#9673a6;fontStyle=1" parent="1" vertex="1">
          <mxGeometry x="-555" y="470" width="750" height="40" as="geometry" />
        </mxCell>
        <mxCell id="78IFhjk_3ZHjHySOzImb-3" value="Promise custom" style="swimlane;html=1;startSize=20;horizontal=1;childLayout=treeLayout;horizontalTree=0;resizable=0;containerType=tree;" parent="1" vertex="1">
          <mxGeometry x="-670" y="540" width="639" height="370" as="geometry">
            <mxRectangle x="-600" y="520" width="130" height="20" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="78IFhjk_3ZHjHySOzImb-4" value="new Promise(excute)" style="whiteSpace=wrap;html=1;" parent="78IFhjk_3ZHjHySOzImb-3" vertex="1">
          <mxGeometry x="273.25" y="40" width="120" height="40" as="geometry" />
        </mxCell>
        <mxCell id="78IFhjk_3ZHjHySOzImb-5" value="status" style="whiteSpace=wrap;html=1;" parent="78IFhjk_3ZHjHySOzImb-3" vertex="1">
          <mxGeometry x="123.5" y="130" width="100" height="40" as="geometry" />
        </mxCell>
        <mxCell id="78IFhjk_3ZHjHySOzImb-6" value="实例" style="edgeStyle=elbowEdgeStyle;elbow=vertical;html=1;rounded=0;" parent="78IFhjk_3ZHjHySOzImb-3" source="78IFhjk_3ZHjHySOzImb-4" target="78IFhjk_3ZHjHySOzImb-5" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="78IFhjk_3ZHjHySOzImb-7" value="data" style="whiteSpace=wrap;html=1;" parent="78IFhjk_3ZHjHySOzImb-3" vertex="1">
          <mxGeometry x="263.5" y="130" width="100" height="40" as="geometry" />
        </mxCell>
        <mxCell id="78IFhjk_3ZHjHySOzImb-8" value="" style="edgeStyle=elbowEdgeStyle;elbow=vertical;html=1;rounded=0;" parent="78IFhjk_3ZHjHySOzImb-3" source="78IFhjk_3ZHjHySOzImb-4" target="78IFhjk_3ZHjHySOzImb-7" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="78IFhjk_3ZHjHySOzImb-28" value="静态" style="edgeStyle=elbowEdgeStyle;elbow=vertical;html=1;rounded=0;" parent="78IFhjk_3ZHjHySOzImb-3" source="78IFhjk_3ZHjHySOzImb-5" target="78IFhjk_3ZHjHySOzImb-29" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="-1698.5500000000002" y="610" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="78IFhjk_3ZHjHySOzImb-29" value="resolve" style="whiteSpace=wrap;html=1;" parent="78IFhjk_3ZHjHySOzImb-3" vertex="1">
          <mxGeometry x="123.5" y="220" width="100" height="40" as="geometry" />
        </mxCell>
        <mxCell id="78IFhjk_3ZHjHySOzImb-38" value="属性" style="edgeStyle=elbowEdgeStyle;elbow=vertical;html=1;rounded=0;" parent="78IFhjk_3ZHjHySOzImb-3" source="78IFhjk_3ZHjHySOzImb-4" target="78IFhjk_3ZHjHySOzImb-39" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="-1597.5500000000002" y="610" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="78IFhjk_3ZHjHySOzImb-39" value="callbackArr" style="whiteSpace=wrap;html=1;" parent="78IFhjk_3ZHjHySOzImb-3" vertex="1">
          <mxGeometry x="443" y="130" width="100" height="40" as="geometry" />
        </mxCell>
        <mxCell id="78IFhjk_3ZHjHySOzImb-40" value="方法" style="edgeStyle=elbowEdgeStyle;elbow=vertical;html=1;rounded=0;" parent="78IFhjk_3ZHjHySOzImb-3" source="78IFhjk_3ZHjHySOzImb-39" target="78IFhjk_3ZHjHySOzImb-41" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="-1418.5500000000002" y="610" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="78IFhjk_3ZHjHySOzImb-41" value="reject" style="whiteSpace=wrap;html=1;" parent="78IFhjk_3ZHjHySOzImb-3" vertex="1">
          <mxGeometry x="443" y="220" width="100" height="40" as="geometry" />
        </mxCell>
        <mxCell id="78IFhjk_3ZHjHySOzImb-51" value="" style="edgeStyle=elbowEdgeStyle;elbow=vertical;html=1;rounded=0;" parent="78IFhjk_3ZHjHySOzImb-3" source="78IFhjk_3ZHjHySOzImb-29" target="78IFhjk_3ZHjHySOzImb-52" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="-1558.5500000000002" y="700" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="78IFhjk_3ZHjHySOzImb-52" value="then(onRsolved,onRejected)" style="whiteSpace=wrap;html=1;" parent="78IFhjk_3ZHjHySOzImb-3" vertex="1">
          <mxGeometry x="20" y="310" width="172" height="40" as="geometry" />
        </mxCell>
        <mxCell id="78IFhjk_3ZHjHySOzImb-69" value="" style="edgeStyle=elbowEdgeStyle;elbow=vertical;html=1;rounded=0;" parent="78IFhjk_3ZHjHySOzImb-3" source="78IFhjk_3ZHjHySOzImb-41" target="78IFhjk_3ZHjHySOzImb-70" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="-1115.5500000000002" y="700" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="78IFhjk_3ZHjHySOzImb-70" value="catch(onRejected)" style="whiteSpace=wrap;html=1;" parent="78IFhjk_3ZHjHySOzImb-3" vertex="1">
          <mxGeometry x="513" y="310" width="106" height="40" as="geometry" />
        </mxCell>
        <mxCell id="78IFhjk_3ZHjHySOzImb-79" value="方法" style="edgeStyle=elbowEdgeStyle;elbow=vertical;html=1;rounded=0;" parent="78IFhjk_3ZHjHySOzImb-3" source="78IFhjk_3ZHjHySOzImb-41" target="78IFhjk_3ZHjHySOzImb-80" edge="1">
          <mxGeometry x="-0.5935" y="47" relative="1" as="geometry">
            <mxPoint x="-1115.5500000000002" y="790" as="sourcePoint" />
            <mxPoint x="47" y="-47" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="78IFhjk_3ZHjHySOzImb-80" value="race(promises)" style="whiteSpace=wrap;html=1;" parent="78IFhjk_3ZHjHySOzImb-3" vertex="1">
          <mxGeometry x="367" y="310" width="106" height="40" as="geometry" />
        </mxCell>
        <mxCell id="78IFhjk_3ZHjHySOzImb-81" value="实例" style="edgeStyle=elbowEdgeStyle;elbow=vertical;html=1;rounded=0;" parent="78IFhjk_3ZHjHySOzImb-3" source="78IFhjk_3ZHjHySOzImb-29" target="78IFhjk_3ZHjHySOzImb-82" edge="1">
          <mxGeometry x="-0.6785" y="-34" relative="1" as="geometry">
            <mxPoint x="-1395.5500000000002" y="790" as="sourcePoint" />
            <Array as="points">
              <mxPoint x="174" y="285" />
              <mxPoint x="150" y="285" />
            </Array>
            <mxPoint x="-34" y="-34" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="78IFhjk_3ZHjHySOzImb-82" value="all(promises)" style="whiteSpace=wrap;html=1;" parent="78IFhjk_3ZHjHySOzImb-3" vertex="1">
          <mxGeometry x="232" y="310" width="95" height="40" as="geometry" />
        </mxCell>
        <mxCell id="78IFhjk_3ZHjHySOzImb-10" value="List" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;fontSize=15;" parent="1" vertex="1">
          <mxGeometry x="-10" y="540" width="230" height="410" as="geometry">
            <mxRectangle x="60" y="540" width="60" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="78IFhjk_3ZHjHySOzImb-11" value="1.定义Promise基本结构" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=14;" parent="78IFhjk_3ZHjHySOzImb-10" vertex="1">
          <mxGeometry y="26" width="230" height="34" as="geometry" />
        </mxCell>
        <mxCell id="78IFhjk_3ZHjHySOzImb-12" value="2.初始化构造函数&#xa;  (1)初始化状态和数据&#xa;  (2)定义一个数组用来保存&#xa;    then()传递的回调函数" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=14;" parent="78IFhjk_3ZHjHySOzImb-10" vertex="1">
          <mxGeometry y="60" width="230" height="80" as="geometry" />
        </mxCell>
        <mxCell id="78IFhjk_3ZHjHySOzImb-13" value="3.在实例then方法中保存传递&#xa;  的回调函数&#xa;  (1)在构造函数中定义resolve&#xa;   和rejecte函数,具体实现改变&#xa;   状态和接收数据并保存&#xa;  (2)在resolve和reject函数中&#xa;    判断数组是否有保存then()&#xa;    的回调,有则异步调用(定时器)&#xa;  (3)resolve和reject不能多次调&#xa;    用,在最开始判断状态即可&#xa;  (4)捕获同步执行器抛出的异常,&#xa;    改变为失败状态,但此时不会调&#xa;    用then()中传递的回调,因为还&#xa;    没有执行then将回调进行保存&#xa;    不明白的话,断点调试即可" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=14;" parent="78IFhjk_3ZHjHySOzImb-10" vertex="1">
          <mxGeometry y="140" width="230" height="270" as="geometry" />
        </mxCell>
        <mxCell id="J3Hmyx6Ni5WOGKM76cY0-5" value="then()方法实现  (用来指定成功/失败的回调函数)" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#dae8fc;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="-720" y="1070" width="470" height="324" as="geometry" />
        </mxCell>
        <mxCell id="J3Hmyx6Ni5WOGKM76cY0-7" value="      1. 如果当前promise是resolved,异步执行成功的回调函数onResolved&#xa;      2. 如果当前promise是rejected,异步执行失败的回调函数onRejected&#xa;      3. 如果当前promise是pending,保存回调函数" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="J3Hmyx6Ni5WOGKM76cY0-5" vertex="1">
          <mxGeometry y="26" width="470" height="68" as="geometry" />
        </mxCell>
        <mxCell id="J3Hmyx6Ni5WOGKM76cY0-8" value="返回一个新的promise对象&#xa;它的结果状态由onResolved或onRejected执行的结果决定&#xa;      2.1 抛出error ==&gt; 变为rejected,结果值为error&#xa;      2.2 返回值不是promise ==&gt; resolved,结果值为返回值&#xa;      2.3 返回值是promise ==&gt; 由这个promise决定新的promise的结果(成功/失败)" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="J3Hmyx6Ni5WOGKM76cY0-5" vertex="1">
          <mxGeometry y="94" width="470" height="96" as="geometry" />
        </mxCell>
        <mxCell id="J3Hmyx6Ni5WOGKM76cY0-6" value="PENDING状态,保存传递自定义的的回调, 因为直接将then()传递的回调保存起来时, 后面&#xa;  reoslve或rejecte调用的时候 返回的promise状态 一直是PENDING状态, 后面链式调用&#xa;  没有效果的 &#xa;  然后开始封装重复的代码, 将try..catch代码块封装, 参数是调用的异步函数, 功能是: &#xa;  根据执行的callback执行结果来改变then()返回的promise状态&#xa;&#xa;当then()没有指定失败的回调函数,需要有一个默认值,将失败的原因继续向下传递" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="J3Hmyx6Ni5WOGKM76cY0-5" vertex="1">
          <mxGeometry y="190" width="470" height="134" as="geometry" />
        </mxCell>
        <mxCell id="6oFz6mukuuIErC0ftcEr-2" value="实现catch功能 (用来指定失吹回调函教的方法, catch是then的语法糖)" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#dae8fc;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="-210" y="1070" width="470" height="176" as="geometry">
            <mxRectangle x="-242" y="1070" width="400" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="6oFz6mukuuIErC0ftcEr-3" value="(1)直接调用原型上then()方法,传递回调并return出去&#xa;(2)因为调用catch也是需要返回promise对象的,并将值向下传递" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="6oFz6mukuuIErC0ftcEr-2" vertex="1">
          <mxGeometry y="26" width="470" height="54" as="geometry" />
        </mxCell>
        <mxCell id="6oFz6mukuuIErC0ftcEr-4" value="(3)如果catch的上一个方法没有抛出异常呢? ==&gt; callback is not a function&#xa;     这是因为进入到catch方法中不能将成功的状态value向下进行传递&#xa;    因为: 在原型catch方法中,成功的回调指定是的undefined 解决方案:在then原型&#xa;    方法中给onResolve初始化(如果没有指定成功的回调,需要将成功的回调进行传递下去)" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="6oFz6mukuuIErC0ftcEr-2" vertex="1">
          <mxGeometry y="80" width="470" height="96" as="geometry" />
        </mxCell>
        <mxCell id="6oFz6mukuuIErC0ftcEr-6" value="实现静态方法resolve和reject" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#dae8fc;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="-210" y="1260" width="468" height="130" as="geometry">
            <mxRectangle x="-242" y="1070" width="400" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="6oFz6mukuuIErC0ftcEr-7" value="(1)resovle用来返回一个指定value的成功的promise,value可能是一个一般的值&#xa;   也可能是promise对象&#xa;&#xa;&#xa;(2)用来返回一个指定reason的失败的promise&#xa;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="6oFz6mukuuIErC0ftcEr-6" vertex="1">
          <mxGeometry y="26" width="468" height="104" as="geometry" />
        </mxCell>
        <mxCell id="6oFz6mukuuIErC0ftcEr-9" value="race静态方法实现和all静态方法实现" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=#dae8fc;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="-720" y="1420" width="470" height="166" as="geometry">
            <mxRectangle x="-242" y="1070" width="400" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="6oFz6mukuuIErC0ftcEr-10" value="reace: &#xa; (1)遍历所有promise,取其对应的结果&#xa; (2)返回的promise由第一个完成p来决定其结果" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="6oFz6mukuuIErC0ftcEr-9" vertex="1">
          <mxGeometry y="26" width="470" height="54" as="geometry" />
        </mxCell>
        <mxCell id="6oFz6mukuuIErC0ftcEr-11" value="all:&#xa; (1)返回一个promise,只有当数组中所有promise都成功才成功,否则失败&#xa; (2)判断数组中的promise的状态是否全部成功,都成功调用resolve,计数&#xa; (3)数据的顺序如何存放?必须要和传递的promise数组顺序一致&#xa; 解决方案: 在遍历promise数组时,获取当前遍历的下标,并存放对应的数组中" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="6oFz6mukuuIErC0ftcEr-9" vertex="1">
          <mxGeometry y="80" width="470" height="86" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
